/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a themeadaptor -i theme/thememanager.h -l ThemeManager /home/tokyo/clone/RebootOS/core/settings-daemon/theme/com.cutefish.Theme.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef THEMEADAPTOR_H
#define THEMEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "theme/thememanager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.cutefish.Theme
 */
class ThemeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.cutefish.Theme")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.cutefish.Theme\">\n"
"    <method name=\"setDarkMode\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"darkMode\"/>\n"
"    </method>\n"
"    <method name=\"setDarkModeDimsWallpaer\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"darkModeDimsWallpaer\"/>\n"
"    </method>\n"
"    <method name=\"setSystemFont\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"fontFamily\"/>\n"
"    </method>\n"
"    <method name=\"setSystemFixedFont\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"fontFamily\"/>\n"
"    </method>\n"
"    <method name=\"setSystemFontPointSize\">\n"
"      <arg direction=\"in\" type=\"d\" name=\"fontSize\"/>\n"
"    </method>\n"
"    <method name=\"setDevicePixelRatio\">\n"
"      <arg direction=\"in\" type=\"d\" name=\"ratio\"/>\n"
"    </method>\n"
"    <method name=\"setWallpaper\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"    </method>\n"
"    <method name=\"setAccentColor\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"accentColor\"/>\n"
"    </method>\n"
"    <method name=\"setBackgroundColor\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"color\"/>\n"
"    </method>\n"
"    <method name=\"setBackgroundType\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"type\"/>\n"
"    </method>\n"
"    <method name=\"setCursorTheme\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"type\"/>\n"
"    </method>\n"
"    <method name=\"setCursorSize\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"type\"/>\n"
"    </method>\n"
"    <method name=\"setIconTheme\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"type\"/>\n"
"    </method>\n"
"    <method name=\"applyXResources\"/>\n"
"    <method name=\"updateFontConfig\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"isDarkMode\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"darkModeDimsWallpaer\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"systemFont\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"systemFixedFont\"/>\n"
"    <property access=\"read\" type=\"d\" name=\"systemFontPointSize\"/>\n"
"    <property access=\"read\" type=\"d\" name=\"devicePixelRatio\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"wallpaper\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"accentColor\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"backgroundType\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"backgroundColor\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"cursorTheme\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"cursorSize\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"iconTheme\"/>\n"
"    <signal name=\"darkModeChanged\">\n"
"      <arg type=\"b\"/>\n"
"    </signal>\n"
"    <signal name=\"wallpaperChanged\">\n"
"      <arg type=\"s\"/>\n"
"    </signal>\n"
"    <signal name=\"darkModeDimsWallpaerChanged\"/>\n"
"    <signal name=\"accentColorChanged\">\n"
"      <arg type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"backgroundTypeChanged\"/>\n"
"    <signal name=\"backgroundColorChanged\"/>\n"
"    <signal name=\"cursorThemeChanged\"/>\n"
"    <signal name=\"cursorSizeChanged\"/>\n"
"    <signal name=\"iconThemeChanged\"/>\n"
"    <signal name=\"systemFontPointSizeChanged\"/>\n"
"    <signal name=\"systemFontChanged\"/>\n"
"  </interface>\n"
        "")
public:
    ThemeAdaptor(ThemeManager *parent);
    virtual ~ThemeAdaptor();

    inline ThemeManager *parent() const
    { return static_cast<ThemeManager *>(QObject::parent()); }

public: // PROPERTIES
    Q_PROPERTY(int accentColor READ accentColor)
    int accentColor() const;

    Q_PROPERTY(QString backgroundColor READ backgroundColor)
    QString backgroundColor() const;

    Q_PROPERTY(int backgroundType READ backgroundType)
    int backgroundType() const;

    Q_PROPERTY(int cursorSize READ cursorSize)
    int cursorSize() const;

    Q_PROPERTY(QString cursorTheme READ cursorTheme)
    QString cursorTheme() const;

    Q_PROPERTY(bool darkModeDimsWallpaer READ darkModeDimsWallpaer)
    bool darkModeDimsWallpaer() const;

    Q_PROPERTY(double devicePixelRatio READ devicePixelRatio)
    double devicePixelRatio() const;

    Q_PROPERTY(QString iconTheme READ iconTheme)
    QString iconTheme() const;

    Q_PROPERTY(bool isDarkMode READ isDarkMode)
    bool isDarkMode() const;

    Q_PROPERTY(QString systemFixedFont READ systemFixedFont)
    QString systemFixedFont() const;

    Q_PROPERTY(QString systemFont READ systemFont)
    QString systemFont() const;

    Q_PROPERTY(double systemFontPointSize READ systemFontPointSize)
    double systemFontPointSize() const;

    Q_PROPERTY(QString wallpaper READ wallpaper)
    QString wallpaper() const;

public Q_SLOTS: // METHODS
    void applyXResources();
    void setAccentColor(int accentColor);
    void setBackgroundColor(const QString &color);
    void setBackgroundType(int type);
    void setCursorSize(int type);
    void setCursorTheme(const QString &type);
    void setDarkMode(bool darkMode);
    void setDarkModeDimsWallpaer(bool darkModeDimsWallpaer);
    void setDevicePixelRatio(double ratio);
    void setIconTheme(const QString &type);
    void setSystemFixedFont(const QString &fontFamily);
    void setSystemFont(const QString &fontFamily);
    void setSystemFontPointSize(double fontSize);
    void setWallpaper(const QString &path);
    void updateFontConfig();
Q_SIGNALS: // SIGNALS
    void accentColorChanged(int in0);
    void backgroundColorChanged();
    void backgroundTypeChanged();
    void cursorSizeChanged();
    void cursorThemeChanged();
    void darkModeChanged(bool in0);
    void darkModeDimsWallpaerChanged();
    void iconThemeChanged();
    void systemFontChanged();
    void systemFontPointSizeChanged();
    void wallpaperChanged(const QString &in0);
};

#endif
